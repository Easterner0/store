name: Generate Keystore and Build APK

on:
  workflow_dispatch: # Allows manual trigger of the workflow

jobs:
  generate-keystore:
    name: Generate Keystore File
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate keystore
      run: |
        keytool -genkey -v \
          -keystore my-release-key.jks \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -alias my-key-alias \
          -dname "CN=John Doe, OU=Development, O=MyCompany, L=New York, ST=NY, C=US" \
          -storepass "keystore-password" \
          -keypass "key-password"

    - name: Upload keystore as artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-keystore
        path: my-release-key.jks

  build-apk:
    name: Build and Sign APK
    runs-on: ubuntu-latest
    needs: generate-keystore

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download keystore
      uses: actions/download-artifact@v3
      with:
        name: my-keystore

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Build APK
      run: ./gradlew assembleRelease

    - name: Sign APK
      run: |
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
          -keystore my-release-key.jks \
          -storepass "keystore-password" \
          -keypass "key-password" \
          app/build/outputs/apk/release/app-release-unsigned.apk my-key-alias

    - name: Align APK
      run: |
        zipalign -v 4 \
          app/build/outputs/apk/release/app-release-unsigned.apk \
          app/build/outputs/apk/release/app-release-signed.apk

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: signed-apk
        path: app/build/outputs/apk/release/app-release-signed.apk
